// src/components/campaigns/detail/CampaignRecommendationsTab.js
import React, { useState } from 'react';
import { Check, AlertTriangle } from 'lucide-react';
import { COLORS } from '../../../styles/ColorStyles';
import RecommendationCard from './recommendations/RecommendationCard';

const CampaignRecommendationsTab = ({ campaign, onImplement, onModify, onReject }) => {
  const [expandedRecommendation, setExpandedRecommendation] = useState(null);
  
  // Toggle expanded state for a recommendation
  const toggleExpand = (id) => {
    setExpandedRecommendation(expandedRecommendation === id ? null : id);
  };
  
  // Implement top recommendation or all high impact recommendations
  const handleImplementTopRecommendation = () => {
    const highImpactRecommendations = campaign.recommendations.filter(
      rec => rec.impact === 'high'
    );
    
    if (highImpactRecommendations.length > 0) {
      highImpactRecommendations.forEach(rec => onImplement(rec));
    } else if (campaign.recommendations.length > 0) {
      onImplement(campaign.recommendations[0]);
    }
  };
  
  return (
    <div>
      {/* Header with actions */}
      <div className="flex justify-between items-center mb-4">
        <h3 className="text-lg font-semibold" style={{ color: COLORS.onyx }}>
          {campaign.recommendations?.length || 0} Recommendations
        </h3>
        
        {campaign.recommendations?.length > 0 && (
          <button 
            onClick={handleImplementTopRecommendation}
            className="inline-flex items-center px-4 py-2 bg-green-500 text-white rounded font-medium text-sm hover:bg-green-600"
          >
            <Check size={16} className="mr-2" />
            Implement All High Impact
          </button>
        )}
      </div>
      
      {/* Introduction to recommendations */}
      <div className="bg-white p-5 rounded-lg shadow-sm mb-6">
        <div className="flex items-start gap-4">
          <div className="p-3 rounded-lg bg-emerald-50 text-emerald-800">
            <AlertTriangle size={24} />
          </div>
          <div>
            <h4 className="font-semibold mb-2" style={{ color: COLORS.onyx }}>
              About AI-Generated Recommendations
            </h4>
            <p className="text-sm text-gray-600 mb-2">
              These recommendations are generated by our AI based on analyzing your campaign performance metrics, industry benchmarks, and user behavior patterns. Each recommendation is rated by potential impact and implementation difficulty.
            </p>
            <p className="text-sm text-gray-600">
              We suggest starting with high-impact, low-difficulty recommendations for the best ROI.
            </p>
          </div>
        </div>
      </div>
      
      {/* Recommendation Cards */}
      {campaign.recommendations?.length > 0 ? (
        <div className="flex flex-col gap-4">
          {campaign.recommendations.map((recommendation) => (
            <RecommendationCard
              key={recommendation.id}
              recommendation={recommendation}
              campaign={campaign}
              isExpanded={expandedRecommendation === recommendation.id}
              onToggleExpand={() => toggleExpand(recommendation.id)}
              onImplement={() => onImplement(recommendation)}
              onModify={() => onModify(recommendation)}
              onReject={() => onReject(recommendation)}
            />
          ))}
        </div>
      ) : (
        <div className="bg-white p-8 rounded-lg shadow-sm text-center text-gray-500">
          <p>No recommendations available for this campaign.</p>
        </div>
      )}
    </div>
  );
};

export default CampaignRecommendationsTab;